version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_engineering_blog_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_KEY=${APP_KEY}
      - DB_HOST=${DB_HOST}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - laravel_engineering_blog_net

  nginx:
    image: nginx:1.25-alpine
    container_name: laravel_engineering_blog_nginx_web
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www
      - ./public:/var/www/public
      - ./nginx/nginx.prod.conf.template:/etc/nginx/templates/nginx.conf.template
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./nginx/ssl-dhparams.pem:/etc/ssl/certs/ssl-dhparams.pem
    depends_on:
      - app
    env_file:
      - .env
    environment:
      - NGINX_SERVER_NAME=${NGINX_SERVER_NAME}
    command:
      - /bin/sh
      - -c
      - |
        envsubst '${NGINX_SERVER_NAME}' \
          < /etc/nginx/templates/nginx.conf.template \
          > /etc/nginx/conf.d/default.conf \
        && exec nginx -g 'daemon off;'
    networks:
      - laravel_engineering_blog_net

  certbot:
    image: certbot/certbot
    container_name: laravel_engineering_blog_certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./public:/var/www/public
    networks:
      - laravel_engineering_blog_net
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 1d & wait $${!}; done'"

volumes:
  certbot-etc:
  certbot-var:

networks:
  laravel_engineering_blog_net:
